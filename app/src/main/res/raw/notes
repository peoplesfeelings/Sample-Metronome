to do
    mp3
        check for mpeg versions?
        check for joint stereo?
        is using 16 bit depth across the board safe
    alert dialog for if audio file doesn't meet criteria
    android:description attribute to the <service> element in your app manifest
    fix wonky beginning
    if loadFile returns false,
        button text should not change
        check for any other state that needs to be updated

check
    the wav parsing code assumes little endian...
    if there are no files, does loadFile and start() fail gracefully
    handler.postattime works if time is missed

test
    induce lost serviceconncection and see
        if start/stop listener fails gracefully
        if service keeps running after activity is destroyed (when not playing)

about
    precision blurb
    apache commons io
    justflac
    update accepted files

store listing
    precision
    connect by usb. put in sample_metronome folder

maybe do
    move fileNeedsToBeLoaded to Dry

audiotrack
    module
        exoplayer
            https://google.github.io/ExoPlayer/guide.html
            https://developer.android.com/guide/topics/media/exoplayer.html
        openmxplayer
            https://www.pocketmagic.net/android-audio-player-using-mediacodec-mediaextractor/
            decoder code
                https://github.com/radhoo/android-openmxplayer/blob/master/OpenMXPlayer/src/net/pocketmagic/android/openmxplayer/OpenMXPlayer.java
    better to decode async?
    mediaextractor
        https://www.programcreek.com/java-api-examples/index.php?api=android.media.MediaExtractor
    short array to byte array
        https://stackoverflow.com/questions/10804852/how-to-convert-short-array-to-byte-array/12347176#12347176
        https://stackoverflow.com/questions/15124050/audiotrack-short-array-to-byte-array-distortion-using-jlayerjava-mp3-decoder
    native codecs
        example
            https://gist.github.com/a-m-s/1991ab18fbcb0fcc2cf9
        another example
            https://dpsm.wordpress.com/category/android/
        another example
            https://bigflake.com/mediacodec/
            links to DecoderTest.java
                https://android.googlesource.com/platform/cts/+/jb-mr2-release/tests/tests/media/src/android/media/cts/DecoderTest.java
    checks
        implement check for length, since not streaming pcm into audiotrack
        how will various sample rates work with SAMPLE_RATE_UNSPECIFIED set
        does format need to be specified
        note buffer size limit for user?
        call release in onstop?
    ndk and c/c++ libraries to get pcm data like libmad?
    non-native codecs
        jlayer for mp3
            http://www.badlogicgames.com/forum/viewtopic.php?f=11&t=17829
        https://0110.be/posts/Decode_MP3s_and_other_Audio_formats_the_easy_way_on_Android
        openjdk include like this dude says? https://stackoverflow.com/questions/16803343/javax-cannot-be-imported-in-my-android-app
    source
        https://android.googlesource.com/platform/frameworks/base/+/android-4.4_r1/media/java/android/media/AudioTrack.java



documentation [out of date]
    main activity
        when main activity is created, it
            checks if app has run before and, if not,
                sets default settings
                launches welcome dialog
                makes directory and writes preliminary files
            creates a seviceconnection instance with listeners
                once connected,
                    activity checks services looprunning bool to set button text accordingly
                    dial is set up here because onmove and onup listeners call service's setinterval
                    edittext is set up here because the textwatcher's aftertextchanged listener calls service's setinterval
                    spinner is set up here because the spinner's setonitemclicklistener assigns the service's rate member and calls setinterval
                        also the setup method assigns the rate member the value loaded from shareprefs
                    listeners set up because start/stop button calls service methods start, stop, and setinterval
            checks if service is running, and if not, starts it
            binds to service using serviceconnection
        start/stop button
            checks if service is playing
                may be playing if it was playing when the prior instance of activity was destroyed
            calls setinterval because it may not have been called yet
            calls service.start(), service.stop()
            changes text
    service
        started when activity starts, if not started already
        stopped in activity's ondestroy, if bound and not playing
        foreground
            started in onstart, stopped in onstop
        when service starts
            instantiates myBinder which provides getter for reference to service instance
            creates soundpool
            loads file
            sets up notification object to be used when turning on foreground
        members
            variables
                lastTick
                    used in
                        loop()
                    assigned in
                        loop()
                        oncreate
                        setInterval
                interval
                    used in loop()
                    assigned in setinterval()
                startTime
                    only assigned in setinterval
                    used in loop()
                loopRunning
                    only set in start(), stop(), and initialized in oncreate
            methods
                loadFile()
                    calls sounds.load()
                loop()
                    starts new thread
                        checks if file needs to be loaded
                            this may be true if loadfile has not been called yet
                            calls loadFile if so
                        assigns lastTick and calls sounds.play
                        starts while loop
                            checks if file needs to be loaded
                                may be true if user selected different sample in sample activity
                                calls loadFile if so
                            if current time greater than lastTick + interval
                                increment count
                                assign lastTick as startTime + count * interval
                                calls sounds.play
                onstart()
                    calls loop()
                onstop()
                    sets loopRunning to false
                setinterval()
                    called by
                        dial listener
                        edittext listener
                        start/stop button listener
                        spinner listener
                    when setinterval() is called,
                        the start time changes
                        bpm is set from fta value
                        interval is set as quotient of duration of beat over rate
                    takes a double fta because app treats dial's "full texture angle" as central store of its position / the bpm
    storage
        convenient place for static members to be shared by components but not dependent on any / complicating life cycles
            fileNeedsToBeLoaded
                only set true in checkbox onclicklistener
                only set false in loadFile()
    diagram
        1
            https://drive.google.com/file/d/1I9zJuEpkjePmoJ-Cmkuff_toSS0uLj03/view?usp=sharing
        2
            https://drive.google.com/file/d/15RkGM2yxLSBOSa7fqDMVjZ_NewCASOQn/view?usp=sharing













########################## snippets i may never need ##########################



        if (format.containsKey(MediaFormat.KEY_MAX_INPUT_SIZE)) {
            inputBuffer = ByteBuffer.allocate(format.getInteger(MediaFormat.KEY_MAX_INPUT_SIZE));
        } else {
            inputBuffer = ByteBuffer.allocate((int) new File(fileLocation).length());
        }
        while (extractor.readSampleData(inputBuffer, 0) >= 0) {
            extractor.advance();
        }

